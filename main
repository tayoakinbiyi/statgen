def myMain(mainDef):
    colors=[(1,0,0),(0,1,0),(0,0,1),(1,1,0),(1,0,1),(0,1,1),(.5,.5,.5),(0,.5,0),(.5,0,0),(0,0,.5)]
    ellDSet=[.1,.5]
    
    local=os.getcwd()+'/'
    ops={
        'file':sys.argv[0],
        'numCores':cpu_count(),
        'colors':colors,
        'refReps':1e6,    
        'simLearnType':'Full',
        'response':'hipRaw',
        'numSnpChr':18,
        'numTraitChr':21,
        'muEpsRange':[],
        'maxSnpGen':5000,
        'transOnly':False,
        'ySeed':0,
        'snpSeed':0,
        'logSource':True,
        'local':local
    }
    
    #['etaSq','numSubjects','numTraits','numSnps']
    #['realSnps','pedigreeSnps','iidSnps','grmSnps','indepTraits','depTraits','quantNorm','stdNorm','noNorm']
    #['indepTraits','depTraits']
    #['gemma','fast','limix','lmm','lm','ped','bimbam','bed']
    #['gemmaStd','gemmaCentral','fast','limix','bed','bimbam','ped']
    ctrl={
        'parms':[0.3,800,600,[10000,10000]],
        'snpParm':['pedigreeSnps'],
        'yParm':['indepTraits','noNorm'],
        'ell':'indepTraits',
        'grmParm':['limix'],
        'reg':['limix','lmm','bimbam']
    }
    parms=setupFolders(ctrl,ops)
    numSnps=ctrl['parms'][3]
    numSubjects=ctrl['parms'][1]
    numTraits=ctrl['parms'][2]
    DBLog(ctrl)    
    
    #######################################################################################################
    
    makeSim(parms)    
    genZScores(parms,[len(numSnps)])
    
    #######################################################################################################
    
    z=np.loadtxt('score/waldStat-'+str(len(numSnps)),delimiter='\t')

    #######################################################################################################
    
    DBCreateFolder('diagnostics',parms)            
    plotZ(z,prefix='z-')
        
    #######################################################################################################

    stat=ELL.ell.ell(np.array([.1,.5]),numTraits)
    if 'depTraits' in parms['ell']:
        corr=np.corrcoef(z,rowvar=False)
        offDiag=corr[np.triu_indices(numTraits,1)]
        L=makePSD(corr)
    if 'indepTraits' in parms['ell']:
        offDiag=np.array([0]*int(numTraits*(numTraits-1)/2))
        L=np.eye(numTraits)
        
    stat.fit(10,2000,4000,1e-7,offDiag) # numLamSteps0,numLamSteps1,numEllSteps,minEll
    
    zRef=np.matmul(norm.rvs(size=[int(ops['refReps']),numTraits]),L.T)
    refELL=stat.score(zRef)
    score=stat.score(z)

    #######################################################################################################

    monteCarlo=stat.monteCarlo(refELL,score)

    #######################################################################################################

    markov=stat.markov(score)

    #######################################################################################################
    
    cross=plotPower(monteCarlo,parms,'mc',['mc-'+str(x) for x in ellDSet])
    plotPower(markov,parms,'markov',['markov-'+str(x) for x in ellDSet])

    DBFinish(local,mainDef)
