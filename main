def myMain(mainDef):
    ellDSet=np.array([.1,.5])
    
    ops={
        'file':sys.argv[0],
        'response':'hipRaw',
        'snpsSeed':0,
        'grmSeed':0,
        'ySeed':0,
        'maxSnpGen':5000,
        'pedigreeMult':0.1,
        'response':'hipRaw'
    }
    
    ctrl={
        'numSubjects':1000,
        'numGrmSnps':10000,
        'numDataSnps':1000,
        'numTraits':2000,
        'eta':0.3,
        'yParm':'indepTraits'
    }
    
    #######################################################################################################
    
    numTraits=ctrl['numTraits']

    #######################################################################################################
    
    parms=setupFolders(ctrl,ops,mainDef)
    
    #######################################################################################################
    
    #makeSim(parms)    

    #######################################################################################################
    '''
    snps=np.loadtxt('snps',delimiter='\t')
    Y=np.loadtxt('Y',delimiter='\t')
    K=np.loadtxt('grm',delimiter='\t')
    M=np.loadtxt('cov',delimiter='\t')
    z,eta=runLimix(snps,Y,K,M)
    np.savetxt('waldStat',z,delimiter='\t')
    '''
    #######################################################################################################
    
    z=np.loadtxt('waldStat',delimiter='\t')
       
    #######################################################################################################   
    
    stat=ELL.ell.ell(ellDSet,numTraits)
    
    #######################################################################################################
    
    zRef=norm.rvs(size=[int(1e6),numTraits])
    score=stat.gnullScore(z)
    refELL=stat.gnullScore(zRef)
    ps=(score,refELL)
    for ind in range(len(ps)):
        np.savetxt('ell-'+str(ind),ps[ind],delimiter='\t')

    #######################################################################################################
    '''
    ps=[]
    for ind in range(2):
        np.loadtxt('ell-'+str(ind),delimiter='\t')
    score,refELL=ps
    '''
    #######################################################################################################
    
    mc=stat.monteCarlo(refELL,score)
    _,type1=plotPower(mc,parms,'mc-log',['mc-'+str(x) for x in ellDSet],log=True,qList=[.001,.01])
    plotPower(mc,parms,'mc',['mc-'+str(x) for x in ellDSet],log=False)
    np.savetxt('diagnostics/type1.tsv',type1,delimiter='\t')

    #######################################################################################################    
    '''
    markov=stat.markov(score)
    plotPower(markov,parms,'markov-log',['markov-'+str(x) for x in ellDSet],log=True)
    plotPower(markov,parms,'markov',['markov-'+str(x) for x in ellDSet],log=False)
    '''       
    #######################################################################################################
    
    Pgbj,Pghc,Phc,Pbj,PminP=makeGBJPVals(parms,z,np.array([0]*int(numTraits*(numTraits-1)/2)))
    ps=(Pgbj,Pghc,Phc,Pbj,PminP)
    for ind in range(len(ps)):
        np.savetxt('bj-'+str(ind),ps[ind],delimiter='\t')
     
    #######################################################################################################
    '''
    ps=[]
    for ind in range(5):
        ps+=[np.loadtxt('bj-'+str(ind),delimiter='\t')]
    Pgbj,Pghc,Phc,Pbj,PminP=ps    
    '''
    #######################################################################################################
    
    for obj in [[Pgbj,'Pgbj',[.5]],[Pghc,'Pghc',[.5]],[Phc,'Phc',[.5]],[Pbj,'Pbj',[.5]],[PminP,'PminP',[.5]]]:
        plotPower(obj[0],parms,obj[1]+'-log',[obj[1]+'-'+str(x) for x in obj[2]],log=True)
        plotPower(obj[0],parms,obj[1],[obj[1]+'-'+str(x) for x in obj[2]],log=False)
    
    #######################################################################################################
    
    plotZ(z,prefix='z-')
    
    #######################################################################################################
    
    git()    
